{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thoboom\\\\Documents\\\\fullstack-data-application\\\\frontend\\\\src\\\\context\\\\UserContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(localStorage.getItem(\"awesomeLeadsToken\"));\n  useEffect(() => {\n    const fetchUser = async () => {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token\n        }\n      };\n      const response = await fetch(\"/api/users/me\", requestOptions);\n\n      if (!response.ok) {\n        setToken(null);\n      }\n\n      localStorage.setItem(\"awesomeLeadsToken\", token);\n    };\n\n    fetchUser();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: [token, setToken],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProvider, \"fi2BmjfBzeri19FN5B6RBT4ZIcY=\");\n\n_c = UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["C:/Users/Thoboom/Documents/fullstack-data-application/frontend/src/context/UserContext.jsx"],"names":["React","createContext","useEffect","useState","UserContext","UserProvider","props","token","setToken","localStorage","getItem","fetchUser","requestOptions","method","headers","Authorization","response","fetch","ok","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;AAEP,OAAO,MAAMI,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACM,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAD,CAAlC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,YAAY;AAC5B,YAAMC,cAAc,GAAG;AACrBC,QAAAA,MAAM,EAAE,KADa;AAErBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYR;AAFpB;AAFY,OAAvB;AAQA,YAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,EAAkBL,cAAlB,CAA5B;;AAEA,UAAI,CAACI,QAAQ,CAACE,EAAd,EAAkB;AAChBV,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDC,MAAAA,YAAY,CAACU,OAAb,CAAqB,mBAArB,EAA0CZ,KAA1C;AACD,KAfD;;AAgBAI,IAAAA,SAAS;AACV,GAlBQ,EAkBN,CAACJ,KAAD,CAlBM,CAAT;AAoBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CAA7B;AAAA,cACGF,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA5BM;;GAAMf,Y;;KAAAA,Y","sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\n\nexport const UserContext = createContext();\n\nexport const UserProvider = (props) => {\n  const [token, setToken] = useState(localStorage.getItem(\"awesomeLeadsToken\"));\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + token,\n        },\n      };\n\n      const response = await fetch(\"/api/users/me\", requestOptions);\n\n      if (!response.ok) {\n        setToken(null);\n      }\n      localStorage.setItem(\"awesomeLeadsToken\", token);\n    };\n    fetchUser();\n  }, [token]);\n\n  return (\n    <UserContext.Provider value={[token, setToken]}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}