{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thoboom\\\\Documents\\\\fullstack-data-application\\\\frontend\\\\src\\\\components\\\\Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport HospForm from \"./HospForm\";\nimport { UserContext } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [token] = useContext(UserContext);\n  const [patientforms, setPatientForms] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [activeModal, setActiveModal] = useState(false);\n  const [id, setId] = useState(null);\n\n  const handleUpdate = async id => {\n    setId(id);\n    setActiveModal(true);\n  };\n\n  const handleDelete = async id => {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      }\n    };\n    const response = await fetch(\"/hospForm/form/${id}\", requestOptions);\n\n    if (!response.ok) {\n      setErrorMessage(\"Failed to delete lead\");\n    }\n\n    getPatientForms();\n  };\n\n  const getPatientForms = async () => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      }\n    };\n    const response = await fetch(\"/hospForm/form\", requestOptions);\n\n    if (!response.ok) {\n      setErrorMessage(\"Something went wrong. Couldn't load the leads\");\n    } else {\n      const data = await response.json();\n      setPatientForms(data);\n      setLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getPatientForms();\n    ;\n  }, []);\n\n  const handleModal = () => {\n    setActiveModal(!activeModal);\n    getPatientForms();\n    ;\n    setId(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HospForm, {\n      active: activeModal,\n      handleModal: handleModal,\n      token: token,\n      id: id,\n      setErrorMessage: setErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button is-fullwidth mb-5 is-primary\",\n      onClick: () => setActiveModal(true),\n      children: \"Create a form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), loaded && patientforms ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table is-fullwidth\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Pr\\xE9nom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nom de famille\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nom de l'hopital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Raison de visite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date de visite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: patientforms.map(patientform => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: patientform.first_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patientform.last_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patientform.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patientform.hospitalName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patientform.causeHosp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patientform.dateHosp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button mr-2 is-info is-light\",\n              onClick: () => handleUpdate(patientform.id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button mr-2 is-danger is-light\",\n              onClick: () => handleDelete(patientform.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, patientform.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"Ct3J/3P2Gj1Nhai1f+OwdpAjT1g=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/Thoboom/Documents/fullstack-data-application/frontend/src/components/Table.jsx"],"names":["React","useContext","useEffect","useState","moment","ErrorMessage","HospForm","UserContext","Table","token","patientforms","setPatientForms","errorMessage","setErrorMessage","loaded","setLoaded","activeModal","setActiveModal","id","setId","handleUpdate","handleDelete","requestOptions","method","headers","Authorization","response","fetch","ok","getPatientForms","data","json","handleModal","map","patientform","first_name","last_name","email","hospitalName","causeHosp","dateHosp"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nimport ErrorMessage from \"./ErrorMessage\";\nimport HospForm from \"./HospForm\";\nimport { UserContext } from \"../context/UserContext\";\n\nconst Table = () => {\n  const [token] = useContext(UserContext);\n  const [patientforms, setPatientForms] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [activeModal, setActiveModal] = useState(false);\n  const [id, setId] = useState(null);\n\n  const handleUpdate = async (id) => {\n    setId(id);\n    setActiveModal(true);\n  };\n\n  const handleDelete = async (id) => {\n    const requestOptions = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    };\n    const response = await fetch(\"/hospForm/form/${id}\", requestOptions);\n    if (!response.ok) {\n      setErrorMessage(\"Failed to delete lead\");\n    }\n\n    getPatientForms();\n  };\n\n  const getPatientForms = async () => {\n    const requestOptions = {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    };\n    const response = await fetch(\"/hospForm/form\", requestOptions);\n    if (!response.ok) {\n      setErrorMessage(\"Something went wrong. Couldn't load the leads\");\n    } else {\n      const data = await response.json();\n      setPatientForms(data);\n      setLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getPatientForms();;\n  }, []);\n\n  const handleModal = () => {\n    setActiveModal(!activeModal);\n    getPatientForms();;\n    setId(null);\n  };\n\n  return (\n    <>\n      <HospForm\n        active={activeModal}\n        handleModal={handleModal}\n        token={token}\n        id={id}\n        setErrorMessage={setErrorMessage}\n      />\n      <button\n        className=\"button is-fullwidth mb-5 is-primary\"\n        onClick={() => setActiveModal(true)}\n      >\n        Create a form\n      </button>\n      <ErrorMessage message={errorMessage} />\n      {loaded && patientforms ? (\n        <table className=\"table is-fullwidth\">\n          <thead>\n            <tr>\n              <th>Prénom</th>\n              <th>Nom de famille</th>\n              <th>Email</th>\n              <th>Nom de l'hopital</th>\n              <th>Raison de visite</th>\n              <th>Date de visite</th>\n            </tr>\n          </thead>\n          <tbody>\n            {patientforms.map((patientform) => (\n              <tr key={patientform.id}>\n                <td>{patientform.first_name}</td>\n                <td>{patientform.last_name}</td>\n                <td>{patientform.email}</td>\n                <td>{patientform.hospitalName}</td>\n                <td>{patientform.causeHosp}</td>\n                <td>{patientform.dateHosp}</td>\n                <td>\n                  <button\n                    className=\"button mr-2 is-info is-light\"\n                    onClick={() => handleUpdate(patientform.id)}\n                  >\n                    Update\n                  </button>\n                  <button\n                    className=\"button mr-2 is-danger is-light\"\n                    onClick={() => handleDelete(patientform.id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>Loading</p>\n      )}\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}