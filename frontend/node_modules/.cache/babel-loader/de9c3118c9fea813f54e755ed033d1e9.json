{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Thoboom\\\\Documents\\\\fullstack-data-application\\\\frontend\\\\src\\\\components\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../context/UserContext\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmationPassword, setConfirmationPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [, setToken] = useContext(UserContext);\n\n  const submitRegistration = async () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    };\n    const response = await fetch(\"/hospForm/users\", requestOptions);\n    const data = await response.json();\n\n    if (!response.ok) {\n      setErrorMessage(data.detail);\n    } else {\n      setToken(data.access_token);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password === confirmationPassword && password.length > 5) {\n      submitRegistration();\n    } else {\n      setErrorMessage(\"Ensure that the passwords match and greater than 5 characters\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"box\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title has-text-centered\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: \"input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: confirmationPassword,\n            onChange: e => setConfirmationPassword(e.target.value),\n            className: \"input\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        message: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"wvWth/bI3ca3805cbbb53qAgCmE=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/Thoboom/Documents/fullstack-data-application/frontend/src/components/Register.jsx"],"names":["React","useContext","useState","UserContext","ErrorMessage","Register","email","setEmail","password","setPassword","confirmationPassword","setConfirmationPassword","errorMessage","setErrorMessage","setToken","submitRegistration","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","json","ok","detail","access_token","handleSubmit","e","preventDefault","length","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\n\nimport { UserContext } from \"../context/UserContext\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst Register = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmationPassword, setConfirmationPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [, setToken] = useContext(UserContext);\n\n  const submitRegistration = async () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email: email, password: password }),\n    };\n\n    const response = await fetch(\"/hospForm/users\", requestOptions);\n    const data = await response.json();\n\n    if (!response.ok) {\n      setErrorMessage(data.detail);\n    } else {\n      setToken(data.access_token);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmationPassword && password.length > 5) {\n      submitRegistration();\n    } else {\n      setErrorMessage(\n        \"Ensure that the passwords match and greater than 5 characters\"\n      );\n    }\n  };\n\n  return (\n    <div className=\"column\">\n      <form className=\"box\" onSubmit={handleSubmit}>\n        <h1 className=\"title has-text-centered\">Register</h1>\n        <div className=\"field\">\n          <label className=\"label\">Email Address</label>\n          <div className=\"control\">\n            <input\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"input\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Password</label>\n          <div className=\"control\">\n            <input\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"input\"\n              required\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\">Confirm Password</label>\n          <div className=\"control\">\n            <input\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={confirmationPassword}\n              onChange={(e) => setConfirmationPassword(e.target.value)}\n              className=\"input\"\n              required\n            />\n          </div>\n        </div>\n        <ErrorMessage message={errorMessage} />\n        <br />\n        <button className=\"button is-primary\" type=\"submit\">\n          Register\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}